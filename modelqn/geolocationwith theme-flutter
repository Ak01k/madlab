//flutter pub add location
//run this in terminal
import 'package:flutter/material.dart';
import 'package:location/location.dart';

void main() {
  runApp(const MyApp());
}

bool _iconclick = false;
IconData _lighticon = Icons.wb_sunny_rounded;
IconData _darkicon = Icons.dark_mode_rounded;

ThemeData _lighttheme = ThemeData(
    primarySwatch: Colors.blue,
    brightness: Brightness.light
);

ThemeData _darktheme = ThemeData(
    primarySwatch: Colors.amber,
    brightness: Brightness.dark
);

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

String _myLoc = "My Location";
Location location = new Location();
late bool _serviceEnabled;
late PermissionStatus _permissionGranted;
late LocationData _locationData;
bool _isListenLocation = false, _isGetLocation = false;

class _MyAppState extends State<MyApp> {

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: _iconclick?_lighttheme:_darktheme,
      home: Scaffold(
        appBar: AppBar(
          title: Text('Home'),

          actions: [
            IconButton(
                onPressed: (){
                  setState(() {
                    _iconclick=!_iconclick;
                  });
                },
                icon: Icon(_iconclick?_darkicon:_lighticon) )
          ],
        ),
        body: Center(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: <Widget>[
                const SizedBox(
                  height: 20.0,
                ),
                const Icon(
                  Icons.location_pin,
                ),
                const SizedBox(
                  height: 20.0,
                ),
                Center(
                  child: Text(
                    "$_myLoc",
                    style: TextStyle(
                      fontSize: 20.0,
                    ),
                  ),
                ),
                const SizedBox(
                  height: 20.0,
                ),
                FloatingActionButton(
                  child: Icon(
                    Icons.location_on_sharp,
                  ),
                  onPressed: updateLoc,
                ),
              ],
            )
        ),
      ),
    );
  }

  void updateLoc() async {
    _serviceEnabled = await location.serviceEnabled();
    if (!_serviceEnabled) {
      _serviceEnabled = await location.requestService();
      if (_serviceEnabled) return;
    }
    _permissionGranted = await location.hasPermission();
    if (_permissionGranted == PermissionStatus.denied) {
      _permissionGranted = await location.requestPermission();
      if (_permissionGranted != PermissionStatus.granted) return;
    }
    _locationData = await location.getLocation();
    setState(() {
      _isGetLocation = true;
    });
    if (_isGetLocation) {
      _myLoc = "${_locationData.latitude} / ${_locationData.longitude}";
    }
  }
}
